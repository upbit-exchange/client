/**
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.math.BigDecimal;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class TradeTicks {
  
  @SerializedName("market")
  private String market = null;
  @SerializedName("trade_date_utc")
  private String tradeDateUtc = null;
  @SerializedName("trade_time_utc")
  private String tradeTimeUtc = null;
  @SerializedName("timestamp")
  private BigDecimal timestamp = null;
  @SerializedName("trade_price")
  private Double tradePrice = null;
  @SerializedName("trade_volume")
  private Double tradeVolume = null;
  @SerializedName("prev_closing_price")
  private Double prevClosingPrice = null;
  @SerializedName("change_price")
  private Double changePrice = null;
  @SerializedName("ask_bid")
  private String askBid = null;
  @SerializedName("sequential_id")
  private BigDecimal sequentialId = null;

  /**
   * 마켓 구분 코드
   **/
  @ApiModelProperty(value = "마켓 구분 코드")
  public String getMarket() {
    return market;
  }
  public void setMarket(String market) {
    this.market = market;
  }

  /**
   * 체결 일자 (UTC 기준)
   **/
  @ApiModelProperty(value = "체결 일자 (UTC 기준)")
  public String getTradeDateUtc() {
    return tradeDateUtc;
  }
  public void setTradeDateUtc(String tradeDateUtc) {
    this.tradeDateUtc = tradeDateUtc;
  }

  /**
   * 체결 시각 (UTC 기준)
   **/
  @ApiModelProperty(value = "체결 시각 (UTC 기준)")
  public String getTradeTimeUtc() {
    return tradeTimeUtc;
  }
  public void setTradeTimeUtc(String tradeTimeUtc) {
    this.tradeTimeUtc = tradeTimeUtc;
  }

  /**
   * 체결 타임스탬프
   **/
  @ApiModelProperty(value = "체결 타임스탬프")
  public BigDecimal getTimestamp() {
    return timestamp;
  }
  public void setTimestamp(BigDecimal timestamp) {
    this.timestamp = timestamp;
  }

  /**
   * 체결 가격
   **/
  @ApiModelProperty(value = "체결 가격")
  public Double getTradePrice() {
    return tradePrice;
  }
  public void setTradePrice(Double tradePrice) {
    this.tradePrice = tradePrice;
  }

  /**
   * 체결량
   **/
  @ApiModelProperty(value = "체결량")
  public Double getTradeVolume() {
    return tradeVolume;
  }
  public void setTradeVolume(Double tradeVolume) {
    this.tradeVolume = tradeVolume;
  }

  /**
   * 전일 종가
   **/
  @ApiModelProperty(value = "전일 종가")
  public Double getPrevClosingPrice() {
    return prevClosingPrice;
  }
  public void setPrevClosingPrice(Double prevClosingPrice) {
    this.prevClosingPrice = prevClosingPrice;
  }

  /**
   * 변화량
   **/
  @ApiModelProperty(value = "변화량")
  public Double getChangePrice() {
    return changePrice;
  }
  public void setChangePrice(Double changePrice) {
    this.changePrice = changePrice;
  }

  /**
   * 매도/매수
   **/
  @ApiModelProperty(value = "매도/매수")
  public String getAskBid() {
    return askBid;
  }
  public void setAskBid(String askBid) {
    this.askBid = askBid;
  }

  /**
   * 체결 번호 (Unique) `sequential_id` 필드는 체결의 유일성 판단을 위한 근거로 쓰일 수 있습니다. 하지만 체결의 순서를 보장하지는 못합니다. 
   **/
  @ApiModelProperty(value = "체결 번호 (Unique) `sequential_id` 필드는 체결의 유일성 판단을 위한 근거로 쓰일 수 있습니다. 하지만 체결의 순서를 보장하지는 못합니다. ")
  public BigDecimal getSequentialId() {
    return sequentialId;
  }
  public void setSequentialId(BigDecimal sequentialId) {
    this.sequentialId = sequentialId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TradeTicks tradeTicks = (TradeTicks) o;
    return (this.market == null ? tradeTicks.market == null : this.market.equals(tradeTicks.market)) &&
        (this.tradeDateUtc == null ? tradeTicks.tradeDateUtc == null : this.tradeDateUtc.equals(tradeTicks.tradeDateUtc)) &&
        (this.tradeTimeUtc == null ? tradeTicks.tradeTimeUtc == null : this.tradeTimeUtc.equals(tradeTicks.tradeTimeUtc)) &&
        (this.timestamp == null ? tradeTicks.timestamp == null : this.timestamp.equals(tradeTicks.timestamp)) &&
        (this.tradePrice == null ? tradeTicks.tradePrice == null : this.tradePrice.equals(tradeTicks.tradePrice)) &&
        (this.tradeVolume == null ? tradeTicks.tradeVolume == null : this.tradeVolume.equals(tradeTicks.tradeVolume)) &&
        (this.prevClosingPrice == null ? tradeTicks.prevClosingPrice == null : this.prevClosingPrice.equals(tradeTicks.prevClosingPrice)) &&
        (this.changePrice == null ? tradeTicks.changePrice == null : this.changePrice.equals(tradeTicks.changePrice)) &&
        (this.askBid == null ? tradeTicks.askBid == null : this.askBid.equals(tradeTicks.askBid)) &&
        (this.sequentialId == null ? tradeTicks.sequentialId == null : this.sequentialId.equals(tradeTicks.sequentialId));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.market == null ? 0: this.market.hashCode());
    result = 31 * result + (this.tradeDateUtc == null ? 0: this.tradeDateUtc.hashCode());
    result = 31 * result + (this.tradeTimeUtc == null ? 0: this.tradeTimeUtc.hashCode());
    result = 31 * result + (this.timestamp == null ? 0: this.timestamp.hashCode());
    result = 31 * result + (this.tradePrice == null ? 0: this.tradePrice.hashCode());
    result = 31 * result + (this.tradeVolume == null ? 0: this.tradeVolume.hashCode());
    result = 31 * result + (this.prevClosingPrice == null ? 0: this.prevClosingPrice.hashCode());
    result = 31 * result + (this.changePrice == null ? 0: this.changePrice.hashCode());
    result = 31 * result + (this.askBid == null ? 0: this.askBid.hashCode());
    result = 31 * result + (this.sequentialId == null ? 0: this.sequentialId.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class TradeTicks {\n");
    
    sb.append("  market: ").append(market).append("\n");
    sb.append("  tradeDateUtc: ").append(tradeDateUtc).append("\n");
    sb.append("  tradeTimeUtc: ").append(tradeTimeUtc).append("\n");
    sb.append("  timestamp: ").append(timestamp).append("\n");
    sb.append("  tradePrice: ").append(tradePrice).append("\n");
    sb.append("  tradeVolume: ").append(tradeVolume).append("\n");
    sb.append("  prevClosingPrice: ").append(prevClosingPrice).append("\n");
    sb.append("  changePrice: ").append(changePrice).append("\n");
    sb.append("  askBid: ").append(askBid).append("\n");
    sb.append("  sequentialId: ").append(sequentialId).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
