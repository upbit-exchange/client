/**
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class APIKey {
  
  @SerializedName("access_key")
  private String accessKey = null;
  @SerializedName("expire_at")
  private String expireAt = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getAccessKey() {
    return accessKey;
  }
  public void setAccessKey(String accessKey) {
    this.accessKey = accessKey;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getExpireAt() {
    return expireAt;
  }
  public void setExpireAt(String expireAt) {
    this.expireAt = expireAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIKey aPIKey = (APIKey) o;
    return (this.accessKey == null ? aPIKey.accessKey == null : this.accessKey.equals(aPIKey.accessKey)) &&
        (this.expireAt == null ? aPIKey.expireAt == null : this.expireAt.equals(aPIKey.expireAt));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.accessKey == null ? 0: this.accessKey.hashCode());
    result = 31 * result + (this.expireAt == null ? 0: this.expireAt.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIKey {\n");
    
    sb.append("  accessKey: ").append(accessKey).append("\n");
    sb.append("  expireAt: ").append(expireAt).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
