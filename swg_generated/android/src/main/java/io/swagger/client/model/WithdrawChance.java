/**
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.Account;
import io.swagger.client.model.Currency;
import io.swagger.client.model.MemberLevel;
import io.swagger.client.model.WithdrawLimit;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class WithdrawChance {
  
  @SerializedName("member_level")
  private MemberLevel memberLevel = null;
  @SerializedName("currency")
  private Currency currency = null;
  @SerializedName("account")
  private Account account = null;
  @SerializedName("withdraw_limit")
  private WithdrawLimit withdrawLimit = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public MemberLevel getMemberLevel() {
    return memberLevel;
  }
  public void setMemberLevel(MemberLevel memberLevel) {
    this.memberLevel = memberLevel;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Currency getCurrency() {
    return currency;
  }
  public void setCurrency(Currency currency) {
    this.currency = currency;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Account getAccount() {
    return account;
  }
  public void setAccount(Account account) {
    this.account = account;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public WithdrawLimit getWithdrawLimit() {
    return withdrawLimit;
  }
  public void setWithdrawLimit(WithdrawLimit withdrawLimit) {
    this.withdrawLimit = withdrawLimit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WithdrawChance withdrawChance = (WithdrawChance) o;
    return (this.memberLevel == null ? withdrawChance.memberLevel == null : this.memberLevel.equals(withdrawChance.memberLevel)) &&
        (this.currency == null ? withdrawChance.currency == null : this.currency.equals(withdrawChance.currency)) &&
        (this.account == null ? withdrawChance.account == null : this.account.equals(withdrawChance.account)) &&
        (this.withdrawLimit == null ? withdrawChance.withdrawLimit == null : this.withdrawLimit.equals(withdrawChance.withdrawLimit));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.memberLevel == null ? 0: this.memberLevel.hashCode());
    result = 31 * result + (this.currency == null ? 0: this.currency.hashCode());
    result = 31 * result + (this.account == null ? 0: this.account.hashCode());
    result = 31 * result + (this.withdrawLimit == null ? 0: this.withdrawLimit.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class WithdrawChance {\n");
    
    sb.append("  memberLevel: ").append(memberLevel).append("\n");
    sb.append("  currency: ").append(currency).append("\n");
    sb.append("  account: ").append(account).append("\n");
    sb.append("  withdrawLimit: ").append(withdrawLimit).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
