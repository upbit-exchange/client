/**
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Deposit {
  
  @SerializedName("type")
  private String type = null;
  @SerializedName("uuid")
  private String uuid = null;
  @SerializedName("currency")
  private String currency = null;
  @SerializedName("txid")
  private String txid = null;
  @SerializedName("state")
  private String state = null;
  @SerializedName("created_at")
  private String createdAt = null;
  @SerializedName("done_at")
  private String doneAt = null;
  @SerializedName("amount")
  private String amount = null;
  @SerializedName("fee")
  private String fee = null;
  @SerializedName("transaction_type")
  private String transactionType = null;

  /**
   * 입출금 종류
   **/
  @ApiModelProperty(value = "입출금 종류")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }

  /**
   * 입금에 대한 고유 아이디
   **/
  @ApiModelProperty(value = "입금에 대한 고유 아이디")
  public String getUuid() {
    return uuid;
  }
  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  /**
   * 화폐를 의미하는 영문 대문자 코드
   **/
  @ApiModelProperty(value = "화폐를 의미하는 영문 대문자 코드")
  public String getCurrency() {
    return currency;
  }
  public void setCurrency(String currency) {
    this.currency = currency;
  }

  /**
   * 입금의 트랜잭션 아이디
   **/
  @ApiModelProperty(value = "입금의 트랜잭션 아이디")
  public String getTxid() {
    return txid;
  }
  public void setTxid(String txid) {
    this.txid = txid;
  }

  /**
   * 입금 상태
   **/
  @ApiModelProperty(value = "입금 상태")
  public String getState() {
    return state;
  }
  public void setState(String state) {
    this.state = state;
  }

  /**
   * 입금 생성 시간
   **/
  @ApiModelProperty(value = "입금 생성 시간")
  public String getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  /**
   * 입금 완료 시간
   **/
  @ApiModelProperty(value = "입금 완료 시간")
  public String getDoneAt() {
    return doneAt;
  }
  public void setDoneAt(String doneAt) {
    this.doneAt = doneAt;
  }

  /**
   * 입금 수량
   **/
  @ApiModelProperty(value = "입금 수량")
  public String getAmount() {
    return amount;
  }
  public void setAmount(String amount) {
    this.amount = amount;
  }

  /**
   * 입금 수수료
   **/
  @ApiModelProperty(value = "입금 수수료")
  public String getFee() {
    return fee;
  }
  public void setFee(String fee) {
    this.fee = fee;
  }

  /**
   * 입금 유형 - default : 일반출금 - internal : 바로입금 
   **/
  @ApiModelProperty(value = "입금 유형 - default : 일반출금 - internal : 바로입금 ")
  public String getTransactionType() {
    return transactionType;
  }
  public void setTransactionType(String transactionType) {
    this.transactionType = transactionType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Deposit deposit = (Deposit) o;
    return (this.type == null ? deposit.type == null : this.type.equals(deposit.type)) &&
        (this.uuid == null ? deposit.uuid == null : this.uuid.equals(deposit.uuid)) &&
        (this.currency == null ? deposit.currency == null : this.currency.equals(deposit.currency)) &&
        (this.txid == null ? deposit.txid == null : this.txid.equals(deposit.txid)) &&
        (this.state == null ? deposit.state == null : this.state.equals(deposit.state)) &&
        (this.createdAt == null ? deposit.createdAt == null : this.createdAt.equals(deposit.createdAt)) &&
        (this.doneAt == null ? deposit.doneAt == null : this.doneAt.equals(deposit.doneAt)) &&
        (this.amount == null ? deposit.amount == null : this.amount.equals(deposit.amount)) &&
        (this.fee == null ? deposit.fee == null : this.fee.equals(deposit.fee)) &&
        (this.transactionType == null ? deposit.transactionType == null : this.transactionType.equals(deposit.transactionType));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.uuid == null ? 0: this.uuid.hashCode());
    result = 31 * result + (this.currency == null ? 0: this.currency.hashCode());
    result = 31 * result + (this.txid == null ? 0: this.txid.hashCode());
    result = 31 * result + (this.state == null ? 0: this.state.hashCode());
    result = 31 * result + (this.createdAt == null ? 0: this.createdAt.hashCode());
    result = 31 * result + (this.doneAt == null ? 0: this.doneAt.hashCode());
    result = 31 * result + (this.amount == null ? 0: this.amount.hashCode());
    result = 31 * result + (this.fee == null ? 0: this.fee.hashCode());
    result = 31 * result + (this.transactionType == null ? 0: this.transactionType.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Deposit {\n");
    
    sb.append("  type: ").append(type).append("\n");
    sb.append("  uuid: ").append(uuid).append("\n");
    sb.append("  currency: ").append(currency).append("\n");
    sb.append("  txid: ").append(txid).append("\n");
    sb.append("  state: ").append(state).append("\n");
    sb.append("  createdAt: ").append(createdAt).append("\n");
    sb.append("  doneAt: ").append(doneAt).append("\n");
    sb.append("  amount: ").append(amount).append("\n");
    sb.append("  fee: ").append(fee).append("\n");
    sb.append("  transactionType: ").append(transactionType).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
