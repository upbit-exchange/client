=begin
#Upbit Open API

### REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 

OpenAPI spec version: 1.0.0
Contact: ujhin942@gmail.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.18

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::CandleApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CandleApi' do
  before do
    # run before each test
    @instance = SwaggerClient::CandleApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CandleApi' do
    it 'should create an instance of CandleApi' do
      expect(@instance).to be_instance_of(SwaggerClient::CandleApi)
    end
  end

  # unit tests for candle_days
  # 시세 캔들 조회 (일 단위)
  # ## 일(Day) 캔들 
  # @param market 마켓 코드 (ex. KRW-BTC) 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :to 마지막 캔들 시각 (exclusive). 포맷 : &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ssXXX&#x60; or &#x60;yyyy-MM-dd HH:mm:ss&#x60;. 비워서 요청 시 가장 최근 캔들 
  # @option opts [Float] :count 캔들 개수 
  # @option opts [String] :converting_price_unit 종가 환산 화폐 단위 (생략 가능, KRW로 명시할 시 원화 환산 가격을 반환.)  &#x60;convertingPriceUnit&#x60; 파라미터의 경우, 원화 마켓이 아닌 다른 마켓(ex. BTC, ETH)의 일봉 요청 시 종가를 명시된 파라미터 값으로 환산해 &#x60;converted_trade_price&#x60; 필드에 추가하여 반환합니다. 현재는 원화(&#x60;KRW&#x60;) 로 변환하는 기능만 제공하며 추후 기능을 확장할 수 있습니다. 
  # @return [Object]
  describe 'candle_days test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for candle_minutes
  # 시세 캔들 조회 (분 단위)
  # ## 분(Minute) 캔들 
  # @param unit 분 단위. 가능한 값 : 1, 3, 5, 15, 10, 30, 60, 240 
  # @param market 마켓 코드 (ex. KRW-BTC) 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :to 마지막 캔들 시각 (exclusive). 포맷 : &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ssXXX&#x60; or &#x60;yyyy-MM-dd HH:mm:ss&#x60;. 비워서 요청 시 가장 최근 캔들 
  # @option opts [Float] :count 캔들 개수 (최대 200개까지 요청 가능) 
  # @return [Object]
  describe 'candle_minutes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for candle_month
  # 시세 캔들 조회 (월 단위)
  # ## 월(Month) 캔들 
  # @param market 마켓 코드 (ex. KRW-BTC) 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :to 마지막 캔들 시각 (exclusive). 포맷 : &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ssXXX&#x60; or &#x60;yyyy-MM-dd HH:mm:ss&#x60;. 비워서 요청 시 가장 최근 캔들 
  # @option opts [Float] :count 캔들 개수 
  # @return [Object]
  describe 'candle_month test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for candle_weeks
  # 시세 캔들 조회 (주 단위)
  # ## 주(Week) 캔들 
  # @param market 마켓 코드 (ex. KRW-BTC) 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :to 마지막 캔들 시각 (exclusive). 포맷 : &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ssXXX&#x60; or &#x60;yyyy-MM-dd HH:mm:ss&#x60;. 비워서 요청 시 가장 최근 캔들 
  # @option opts [Float] :count 캔들 개수 
  # @return [Object]
  describe 'candle_weeks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
