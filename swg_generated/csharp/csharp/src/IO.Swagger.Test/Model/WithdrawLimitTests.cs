/* 
 * Upbit Open API
 *
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing WithdrawLimit
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class WithdrawLimitTests
    {
        // TODO uncomment below to declare an instance variable for WithdrawLimit
        //private WithdrawLimit instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of WithdrawLimit
            //instance = new WithdrawLimit();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WithdrawLimit
        /// </summary>
        [Test]
        public void WithdrawLimitInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" WithdrawLimit
            //Assert.IsInstanceOfType<WithdrawLimit> (instance, "variable 'instance' is a WithdrawLimit");
        }


        /// <summary>
        /// Test the property 'Currency'
        /// </summary>
        [Test]
        public void CurrencyTest()
        {
            // TODO unit test for the property 'Currency'
        }
        /// <summary>
        /// Test the property 'Minimum'
        /// </summary>
        [Test]
        public void MinimumTest()
        {
            // TODO unit test for the property 'Minimum'
        }
        /// <summary>
        /// Test the property 'Onetime'
        /// </summary>
        [Test]
        public void OnetimeTest()
        {
            // TODO unit test for the property 'Onetime'
        }
        /// <summary>
        /// Test the property 'Daily'
        /// </summary>
        [Test]
        public void DailyTest()
        {
            // TODO unit test for the property 'Daily'
        }
        /// <summary>
        /// Test the property 'RemainingDaily'
        /// </summary>
        [Test]
        public void RemainingDailyTest()
        {
            // TODO unit test for the property 'RemainingDaily'
        }
        /// <summary>
        /// Test the property 'RemainingDailyKrw'
        /// </summary>
        [Test]
        public void RemainingDailyKrwTest()
        {
            // TODO unit test for the property 'RemainingDailyKrw'
        }
        /// <summary>
        /// Test the property 'Fixed'
        /// </summary>
        [Test]
        public void FixedTest()
        {
            // TODO unit test for the property 'Fixed'
        }
        /// <summary>
        /// Test the property 'CanWithdraw'
        /// </summary>
        [Test]
        public void CanWithdrawTest()
        {
            // TODO unit test for the property 'CanWithdraw'
        }

    }

}
