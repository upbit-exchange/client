/**
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.18.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * Orderbook.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_Orderbook_H_
#define IO_SWAGGER_CLIENT_MODEL_Orderbook_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "OrderbookUnit.h"
#include <vector>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  Orderbook
    : public ModelBase
{
public:
    Orderbook();
    virtual ~Orderbook();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Orderbook members

    /// <summary>
    /// 마켓 코드
    /// </summary>
    utility::string_t getMarket() const;
    bool marketIsSet() const;
    void unsetMarket();
    void setMarket(utility::string_t value);
    /// <summary>
    /// 호가 생성 시각
    /// </summary>
    double getTimestamp() const;
    bool timestampIsSet() const;
    void unsetTimestamp();
    void setTimestamp(double value);
    /// <summary>
    /// 호가 매도 총 잔량
    /// </summary>
    double getTotalAskSize() const;
    bool totalAskSizeIsSet() const;
    void unsetTotal_ask_size();
    void setTotalAskSize(double value);
    /// <summary>
    /// 호가 매수 총량
    /// </summary>
    double getTotalBidSize() const;
    bool totalBidSizeIsSet() const;
    void unsetTotal_bid_size();
    void setTotalBidSize(double value);
    /// <summary>
    /// 호가
    /// </summary>
    std::vector<std::shared_ptr<OrderbookUnit>>& getOrderbookUnits();
    bool orderbookUnitsIsSet() const;
    void unsetOrderbook_units();
    void setOrderbookUnits(std::vector<std::shared_ptr<OrderbookUnit>> value);

protected:
    utility::string_t m_Market;
    bool m_MarketIsSet;
    double m_Timestamp;
    bool m_TimestampIsSet;
    double m_Total_ask_size;
    bool m_Total_ask_sizeIsSet;
    double m_Total_bid_size;
    bool m_Total_bid_sizeIsSet;
    std::vector<std::shared_ptr<OrderbookUnit>> m_Orderbook_units;
    bool m_Orderbook_unitsIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_Orderbook_H_ */
