/**
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.18.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * Trade.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_Trade_H_
#define IO_SWAGGER_CLIENT_MODEL_Trade_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  Trade
    : public ModelBase
{
public:
    Trade();
    virtual ~Trade();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Trade members

    /// <summary>
    /// 마켓의 유일 키
    /// </summary>
    utility::string_t getMarket() const;
    bool marketIsSet() const;
    void unsetMarket();
    void setMarket(utility::string_t value);
    /// <summary>
    /// 체결의 고유 아이디
    /// </summary>
    utility::string_t getUuid() const;
    bool uuidIsSet() const;
    void unsetUuid();
    void setUuid(utility::string_t value);
    /// <summary>
    /// 체결 가격
    /// </summary>
    utility::string_t getPrice() const;
    bool priceIsSet() const;
    void unsetPrice();
    void setPrice(utility::string_t value);
    /// <summary>
    /// 체결 양
    /// </summary>
    utility::string_t getVolume() const;
    bool volumeIsSet() const;
    void unsetVolume();
    void setVolume(utility::string_t value);
    /// <summary>
    /// 체결된 총 가격
    /// </summary>
    utility::string_t getFunds() const;
    bool fundsIsSet() const;
    void unsetFunds();
    void setFunds(utility::string_t value);
    /// <summary>
    /// 체결 종류
    /// </summary>
    utility::string_t getSide() const;
    bool sideIsSet() const;
    void unsetSide();
    void setSide(utility::string_t value);
    /// <summary>
    /// 체결 시각
    /// </summary>
    utility::string_t getCreatedAt() const;
    bool createdAtIsSet() const;
    void unsetCreated_at();
    void setCreatedAt(utility::string_t value);

protected:
    utility::string_t m_Market;
    bool m_MarketIsSet;
    utility::string_t m_Uuid;
    bool m_UuidIsSet;
    utility::string_t m_Price;
    bool m_PriceIsSet;
    utility::string_t m_Volume;
    bool m_VolumeIsSet;
    utility::string_t m_Funds;
    bool m_FundsIsSet;
    utility::string_t m_Side;
    bool m_SideIsSet;
    utility::string_t m_Created_at;
    bool m_Created_atIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_Trade_H_ */
