/**
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.18.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * WithdrawLimit.h
 *
 * 출금 제약 정보
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_WithdrawLimit_H_
#define IO_SWAGGER_CLIENT_MODEL_WithdrawLimit_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 출금 제약 정보
/// </summary>
class  WithdrawLimit
    : public ModelBase
{
public:
    WithdrawLimit();
    virtual ~WithdrawLimit();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// WithdrawLimit members

    /// <summary>
    /// 화폐를 의미하는 영문 대문자 코드
    /// </summary>
    utility::string_t getCurrency() const;
    bool currencyIsSet() const;
    void unsetCurrency();
    void setCurrency(utility::string_t value);
    /// <summary>
    /// 출금 최소 금액/수량
    /// </summary>
    utility::string_t getMinimum() const;
    bool minimumIsSet() const;
    void unsetMinimum();
    void setMinimum(utility::string_t value);
    /// <summary>
    /// 1회 출금 한도
    /// </summary>
    utility::string_t getOnetime() const;
    bool onetimeIsSet() const;
    void unsetOnetime();
    void setOnetime(utility::string_t value);
    /// <summary>
    /// 1일 출금 한도
    /// </summary>
    utility::string_t getDaily() const;
    bool dailyIsSet() const;
    void unsetDaily();
    void setDaily(utility::string_t value);
    /// <summary>
    /// 1일 잔여 출금 한도
    /// </summary>
    utility::string_t getRemainingDaily() const;
    bool remainingDailyIsSet() const;
    void unsetRemaining_daily();
    void setRemainingDaily(utility::string_t value);
    /// <summary>
    /// 통합 1일 잔여 출금 한도
    /// </summary>
    utility::string_t getRemainingDailyKrw() const;
    bool remainingDailyKrwIsSet() const;
    void unsetRemaining_daily_krw();
    void setRemainingDailyKrw(utility::string_t value);
    /// <summary>
    /// 출금 금액/수량 소수점 자리 수
    /// </summary>
    double getFixed() const;
    bool fixedIsSet() const;
    void unsetFixed();
    void setFixed(double value);
    /// <summary>
    /// 출금 지원 여부
    /// </summary>
    bool isCanWithdraw() const;
    bool canWithdrawIsSet() const;
    void unsetCan_withdraw();
    void setCanWithdraw(bool value);

protected:
    utility::string_t m_Currency;
    bool m_CurrencyIsSet;
    utility::string_t m_Minimum;
    bool m_MinimumIsSet;
    utility::string_t m_Onetime;
    bool m_OnetimeIsSet;
    utility::string_t m_Daily;
    bool m_DailyIsSet;
    utility::string_t m_Remaining_daily;
    bool m_Remaining_dailyIsSet;
    utility::string_t m_Remaining_daily_krw;
    bool m_Remaining_daily_krwIsSet;
    double m_Fixed;
    bool m_FixedIsSet;
    bool m_Can_withdraw;
    bool m_Can_withdrawIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_WithdrawLimit_H_ */
