/**
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.18.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * DepositApi.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_API_DepositApi_H_
#define IO_SWAGGER_CLIENT_API_DepositApi_H_


#include "../ApiClient.h"

#include "Deposit.h"
#include "DepositCompleteResponse.h"
#include "DepositTransferResponse.h"
#include "Error.h"
#include "Object.h"
#include <cpprest/details/basic_types.h>

#include <boost/optional.hpp>

namespace io {
namespace swagger {
namespace client {
namespace api {

using namespace io::swagger::client::model;

class  DepositApi
{
public:
    DepositApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~DepositApi();
    /// <summary>
    /// 개별 입금 주소 조회
    /// </summary>
    /// <remarks>
    /// ## 개별 입금 주소 조회  **NOTE**: 입금 주소 조회 요청 API 유의사항  입금 주소 생성 요청 이후 아직 발급되지 않은 상태일 경우 deposit_address가 null일 수 있습니다. 
    /// </remarks>
    /// <param name="currency">Currency symbol </param>
    pplx::task<std::shared_ptr<DepositCompleteResponse>> deposit_coinAddress(
        utility::string_t currency
    );
    /// <summary>
    /// 전체 입금 주소 조회
    /// </summary>
    /// <remarks>
    /// ## 내가 보유한 자산 리스트를 보여줍니다.  **NOTE**: 입금 주소 조회 요청 API 유의사항  입금 주소 생성 요청 이후 아직 발급되지 않은 상태일 경우 deposit_address가 null일 수 있습니다. 
    /// </remarks>
    pplx::task<std::shared_ptr<Object>> deposit_coinAddresses(
    );
    /// <summary>
    /// 입금 주소 생성 요청
    /// </summary>
    /// <remarks>
    /// 입금 주소 생성을 요청한다.  **NOTE**: 입금 주소 생성 요청 API 유의사항  입금 주소의 생성은 서버에서 비동기적으로 이뤄집니다. 비동기적 생성 특성상 요청과 동시에 입금 주소가 발급되지 않을 수 있습니다. 주소 발급 요청 시 결과로 Response1이 반환되며 주소 발급 완료 이전까지 계속 Response1이 반환됩니다. 주소가 발급된 이후부터는 새로운 주소가 발급되는 것이 아닌 이전에 발급된 주소가 Response2 형태로 반환됩니다. 정상적으로 주소가 생성되지 않는다면 일정 시간 이후 해당 API를 다시 호출해주시길 부탁드립니다. 
    /// </remarks>
    /// <param name="currency">Currency 코드 </param>
    pplx::task<std::shared_ptr<DepositCompleteResponse>> deposit_generateCoinAddress(
        utility::string_t currency
    );
    /// <summary>
    /// 개별 입금 조회
    /// </summary>
    /// <remarks>
    /// ## 개별 입금 조회 
    /// </remarks>
    /// <param name="uuid">입금 UUID  (optional)</param>
    /// <param name="txid">입금 TXID  (optional)</param>
    /// <param name="currency">Currency 코드  (optional)</param>
    pplx::task<std::shared_ptr<Deposit>> deposit_info(
        boost::optional<utility::string_t> uuid,
        boost::optional<utility::string_t> txid,
        boost::optional<utility::string_t> currency
    );
    /// <summary>
    /// 입금 리스트 조회
    /// </summary>
    /// <remarks>
    /// ## 입금 리스트 조회 
    /// </remarks>
    /// <param name="currency">Currency 코드  (optional)</param>
    /// <param name="state">출금 상태 - submitting : 처리 중 - submitted : 처리완료 - almost_accepted : 입금 대기 중 - rejected : 거절 - accepted : 승인됨 - processing : 처리 중  (optional)</param>
    /// <param name="uuids">입금 UUID의 목록  (optional)</param>
    /// <param name="txids">입금 TXID의 목록  (optional)</param>
    /// <param name="limit">개수 제한 (default: 100, max: 100)  (optional)</param>
    /// <param name="page">페이지 수, default: 1  (optional)</param>
    /// <param name="orderBy">정렬 방식 - asc : 오름차순 - desc : 내림차순 (default)  (optional)</param>
    pplx::task<std::vector<std::shared_ptr<Deposit>>> deposit_infoAll(
        boost::optional<utility::string_t> currency,
        boost::optional<utility::string_t> state,
        boost::optional<std::vector<utility::string_t>> uuids,
        boost::optional<std::vector<utility::string_t>> txids,
        boost::optional<double> limit,
        boost::optional<double> page,
        boost::optional<utility::string_t> orderBy
    );

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_API_DepositApi_H_ */

