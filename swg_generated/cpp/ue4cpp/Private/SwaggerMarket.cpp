/**
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
#include "SwaggerMarket.h"

#include "SwaggerModule.h"
#include "SwaggerHelpers.h"

#include "Templates/SharedPointer.h"

namespace Swagger 
{

void SwaggerMarket::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Id.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("id")); WriteJsonValue(Writer, Id.GetValue());	
	}
	if (Name.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("name")); WriteJsonValue(Writer, Name.GetValue());	
	}
	if (OrderTypes.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("order_types")); WriteJsonValue(Writer, OrderTypes.GetValue());	
	}
	if (OrderSides.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("order_sides")); WriteJsonValue(Writer, OrderSides.GetValue());	
	}
	if (Bid.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("bid")); WriteJsonValue(Writer, Bid.GetValue());	
	}
	if (Ask.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("ask")); WriteJsonValue(Writer, Ask.GetValue());	
	}
	if (MaxTotal.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("max_total")); WriteJsonValue(Writer, MaxTotal.GetValue());	
	}
	if (State.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("state")); WriteJsonValue(Writer, State.GetValue());	
	}
	Writer->WriteObjectEnd();
}

bool SwaggerMarket::FromJson(const TSharedPtr<FJsonObject>& JsonObject)
{
	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(JsonObject, TEXT("id"), Id);
	ParseSuccess &= TryGetJsonValue(JsonObject, TEXT("name"), Name);
	ParseSuccess &= TryGetJsonValue(JsonObject, TEXT("order_types"), OrderTypes);
	ParseSuccess &= TryGetJsonValue(JsonObject, TEXT("order_sides"), OrderSides);
	ParseSuccess &= TryGetJsonValue(JsonObject, TEXT("bid"), Bid);
	ParseSuccess &= TryGetJsonValue(JsonObject, TEXT("ask"), Ask);
	ParseSuccess &= TryGetJsonValue(JsonObject, TEXT("max_total"), MaxTotal);
	ParseSuccess &= TryGetJsonValue(JsonObject, TEXT("state"), State);

	return ParseSuccess;
}
}
