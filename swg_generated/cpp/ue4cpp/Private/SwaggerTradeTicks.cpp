/**
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
#include "SwaggerTradeTicks.h"

#include "SwaggerModule.h"
#include "SwaggerHelpers.h"

#include "Templates/SharedPointer.h"

namespace Swagger 
{

void SwaggerTradeTicks::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Market.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("market")); WriteJsonValue(Writer, Market.GetValue());	
	}
	if (TradeDateUtc.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("trade_date_utc")); WriteJsonValue(Writer, TradeDateUtc.GetValue());	
	}
	if (TradeTimeUtc.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("trade_time_utc")); WriteJsonValue(Writer, TradeTimeUtc.GetValue());	
	}
	if (Timestamp.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("timestamp")); WriteJsonValue(Writer, Timestamp.GetValue());	
	}
	if (TradePrice.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("trade_price")); WriteJsonValue(Writer, TradePrice.GetValue());	
	}
	if (TradeVolume.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("trade_volume")); WriteJsonValue(Writer, TradeVolume.GetValue());	
	}
	if (PrevClosingPrice.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("prev_closing_price")); WriteJsonValue(Writer, PrevClosingPrice.GetValue());	
	}
	if (ChangePrice.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("change_price")); WriteJsonValue(Writer, ChangePrice.GetValue());	
	}
	if (AskBid.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("ask_bid")); WriteJsonValue(Writer, AskBid.GetValue());	
	}
	if (SequentialId.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("sequential_id")); WriteJsonValue(Writer, SequentialId.GetValue());	
	}
	Writer->WriteObjectEnd();
}

bool SwaggerTradeTicks::FromJson(const TSharedPtr<FJsonObject>& JsonObject)
{
	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(JsonObject, TEXT("market"), Market);
	ParseSuccess &= TryGetJsonValue(JsonObject, TEXT("trade_date_utc"), TradeDateUtc);
	ParseSuccess &= TryGetJsonValue(JsonObject, TEXT("trade_time_utc"), TradeTimeUtc);
	ParseSuccess &= TryGetJsonValue(JsonObject, TEXT("timestamp"), Timestamp);
	ParseSuccess &= TryGetJsonValue(JsonObject, TEXT("trade_price"), TradePrice);
	ParseSuccess &= TryGetJsonValue(JsonObject, TEXT("trade_volume"), TradeVolume);
	ParseSuccess &= TryGetJsonValue(JsonObject, TEXT("prev_closing_price"), PrevClosingPrice);
	ParseSuccess &= TryGetJsonValue(JsonObject, TEXT("change_price"), ChangePrice);
	ParseSuccess &= TryGetJsonValue(JsonObject, TEXT("ask_bid"), AskBid);
	ParseSuccess &= TryGetJsonValue(JsonObject, TEXT("sequential_id"), SequentialId);

	return ParseSuccess;
}
}
