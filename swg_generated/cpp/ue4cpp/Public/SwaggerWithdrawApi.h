/**
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
#pragma once

#include "CoreMinimal.h"
#include "SwaggerBaseModel.h"

namespace Swagger 
{

class SWAGGER_API SwaggerWithdrawApi
{
public:
	SwaggerWithdrawApi();
	~SwaggerWithdrawApi();

	void SetURL(const FString& Url);
	void AddHeaderParam(const FString& Key, const FString& Value);
	void ClearHeaderParams();

	class WithdrawChanceRequest;
	class WithdrawChanceResponse;
	class WithdrawCoinRequest;
	class WithdrawCoinResponse;
	class WithdrawInfoRequest;
	class WithdrawInfoResponse;
	class WithdrawInfoAllRequest;
	class WithdrawInfoAllResponse;
	class WithdrawKrwRequest;
	class WithdrawKrwResponse;
	
    DECLARE_DELEGATE_OneParam(FWithdrawChanceDelegate, const WithdrawChanceResponse&);
    DECLARE_DELEGATE_OneParam(FWithdrawCoinDelegate, const WithdrawCoinResponse&);
    DECLARE_DELEGATE_OneParam(FWithdrawInfoDelegate, const WithdrawInfoResponse&);
    DECLARE_DELEGATE_OneParam(FWithdrawInfoAllDelegate, const WithdrawInfoAllResponse&);
    DECLARE_DELEGATE_OneParam(FWithdrawKrwDelegate, const WithdrawKrwResponse&);
    
    bool WithdrawChance(const WithdrawChanceRequest& Request, const FWithdrawChanceDelegate& Delegate = FWithdrawChanceDelegate()) const;
    bool WithdrawCoin(const WithdrawCoinRequest& Request, const FWithdrawCoinDelegate& Delegate = FWithdrawCoinDelegate()) const;
    bool WithdrawInfo(const WithdrawInfoRequest& Request, const FWithdrawInfoDelegate& Delegate = FWithdrawInfoDelegate()) const;
    bool WithdrawInfoAll(const WithdrawInfoAllRequest& Request, const FWithdrawInfoAllDelegate& Delegate = FWithdrawInfoAllDelegate()) const;
    bool WithdrawKrw(const WithdrawKrwRequest& Request, const FWithdrawKrwDelegate& Delegate = FWithdrawKrwDelegate()) const;
    
private:
    void OnWithdrawChanceResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FWithdrawChanceDelegate Delegate) const;
    void OnWithdrawCoinResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FWithdrawCoinDelegate Delegate) const;
    void OnWithdrawInfoResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FWithdrawInfoDelegate Delegate) const;
    void OnWithdrawInfoAllResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FWithdrawInfoAllDelegate Delegate) const;
    void OnWithdrawKrwResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FWithdrawKrwDelegate Delegate) const;
    
	bool IsValid() const;
	void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& InOutResponse) const;

	FString Url;
	TMap<FString,FString> AdditionalHeaderParams;
};
	
}
