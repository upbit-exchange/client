/**
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
#pragma once

#include "CoreMinimal.h"
#include "SwaggerBaseModel.h"

namespace Swagger 
{

class SWAGGER_API SwaggerCandleApi
{
public:
	SwaggerCandleApi();
	~SwaggerCandleApi();

	void SetURL(const FString& Url);
	void AddHeaderParam(const FString& Key, const FString& Value);
	void ClearHeaderParams();

	class CandleDaysRequest;
	class CandleDaysResponse;
	class CandleMinutesRequest;
	class CandleMinutesResponse;
	class CandleMonthRequest;
	class CandleMonthResponse;
	class CandleWeeksRequest;
	class CandleWeeksResponse;
	
    DECLARE_DELEGATE_OneParam(FCandleDaysDelegate, const CandleDaysResponse&);
    DECLARE_DELEGATE_OneParam(FCandleMinutesDelegate, const CandleMinutesResponse&);
    DECLARE_DELEGATE_OneParam(FCandleMonthDelegate, const CandleMonthResponse&);
    DECLARE_DELEGATE_OneParam(FCandleWeeksDelegate, const CandleWeeksResponse&);
    
    bool CandleDays(const CandleDaysRequest& Request, const FCandleDaysDelegate& Delegate = FCandleDaysDelegate()) const;
    bool CandleMinutes(const CandleMinutesRequest& Request, const FCandleMinutesDelegate& Delegate = FCandleMinutesDelegate()) const;
    bool CandleMonth(const CandleMonthRequest& Request, const FCandleMonthDelegate& Delegate = FCandleMonthDelegate()) const;
    bool CandleWeeks(const CandleWeeksRequest& Request, const FCandleWeeksDelegate& Delegate = FCandleWeeksDelegate()) const;
    
private:
    void OnCandleDaysResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FCandleDaysDelegate Delegate) const;
    void OnCandleMinutesResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FCandleMinutesDelegate Delegate) const;
    void OnCandleMonthResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FCandleMonthDelegate Delegate) const;
    void OnCandleWeeksResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FCandleWeeksDelegate Delegate) const;
    
	bool IsValid() const;
	void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& InOutResponse) const;

	FString Url;
	TMap<FString,FString> AdditionalHeaderParams;
};
	
}
