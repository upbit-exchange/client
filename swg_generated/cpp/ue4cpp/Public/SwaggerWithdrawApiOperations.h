/**
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
#pragma once

#include "SwaggerBaseModel.h"
#include "SwaggerWithdrawApi.h"

#include "SwaggerError.h"
#include "SwaggerWithdraw.h"
#include "SwaggerWithdrawChance.h"
#include "SwaggerWithdrawCoin.h"

namespace Swagger 
{

/* 출금 가능 정보
 *
 * ## 해당 통화의 가능한 출금 정보를 확인한다. 
*/
class SWAGGER_API SwaggerWithdrawApi::WithdrawChanceRequest : public Request
{
public:
    virtual ~WithdrawChanceRequest() {}
	void SetupHttpRequest(const TSharedRef<IHttpRequest>& HttpRequest) const final;
	FString ComputePath() const final;
    
	/* Currency Symbol  */
	FString Currency;
};

class SWAGGER_API SwaggerWithdrawApi::WithdrawChanceResponse : public Response
{
public:
    virtual ~WithdrawChanceResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonObject) final;
    
    SwaggerWithdrawChance Content;
};

/* 코인 출금하기
 *
 * ## 코인 출금을 요청한다. **NOTE**: 바로출금 이용 시 유의사항 업비트 회원의 주소가 아닌 주소로 바로출금을 요청하는 경우, 출금이 정상적으로 수행되지 않습니다. 반드시 주소를 확인 후 출금을 진행하시기 바랍니다. 
*/
class SWAGGER_API SwaggerWithdrawApi::WithdrawCoinRequest : public Request
{
public:
    virtual ~WithdrawCoinRequest() {}
	void SetupHttpRequest(const TSharedRef<IHttpRequest>& HttpRequest) const final;
	FString ComputePath() const final;
    
	/* Currency 코드  */
	FString Currency;
	/* 출금 수량  */
	FString Amount;
	/* 출금 가능 주소에 등록된 출금 주소  */
	FString Address;
	/* 2차 출금 주소 (필요한 코인에 한해서)  */
	TOptional<FString> SecondaryAddress;
	/* 출금 유형 - default : 일반출금 - internal : 바로출금  */
	TOptional<FString> TransactionType;
};

class SWAGGER_API SwaggerWithdrawApi::WithdrawCoinResponse : public Response
{
public:
    virtual ~WithdrawCoinResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonObject) final;
    
    SwaggerWithdrawCoin Content;
};

/* 개별 출금 조회
 *
 * ## 출금 UUID를 통해 개별 출금 정보를 조회한다. 
*/
class SWAGGER_API SwaggerWithdrawApi::WithdrawInfoRequest : public Request
{
public:
    virtual ~WithdrawInfoRequest() {}
	void SetupHttpRequest(const TSharedRef<IHttpRequest>& HttpRequest) const final;
	FString ComputePath() const final;
    
	/* 출금 UUID  */
	TOptional<FString> Uuid;
	/* 출금 TXID  */
	TOptional<FString> Txid;
	/* Currency 코드  */
	TOptional<FString> Currency;
};

class SWAGGER_API SwaggerWithdrawApi::WithdrawInfoResponse : public Response
{
public:
    virtual ~WithdrawInfoResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonObject) final;
    
    SwaggerWithdraw Content;
};

/* 출금 리스트 조회
 *
 * ## 출금 리스트를 조회한다. 
*/
class SWAGGER_API SwaggerWithdrawApi::WithdrawInfoAllRequest : public Request
{
public:
    virtual ~WithdrawInfoAllRequest() {}
	void SetupHttpRequest(const TSharedRef<IHttpRequest>& HttpRequest) const final;
	FString ComputePath() const final;
    
	/* Currency 코드  */
	TOptional<FString> Currency;
	/* 출금 상태 - submitting : 처리 중 - submitted : 처리 완료 - almost_accepted : 출금대기중 - rejected : 거부 - accepted : 승인됨 - processing : 처리 중 - done : 완료 - canceled : 취소됨  */
	TOptional<FString> State;
	/* 출금 UUID의 목록  */
	TOptional<TArray<FString>> Uuids;
	/* 출금 TXID의 목록  */
	TOptional<TArray<FString>> Txids;
	/* 개수 제한 (default: 100, max: 100)  */
	TOptional<double> Limit;
	/* 페이지 수, default: 1  */
	TOptional<double> Page;
	/* 정렬 방식 - asc : 오름차순 - desc : 내림차순 (default)  */
	TOptional<FString> OrderBy;
};

class SWAGGER_API SwaggerWithdrawApi::WithdrawInfoAllResponse : public Response
{
public:
    virtual ~WithdrawInfoAllResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonObject) final;
    
    TArray<SwaggerWithdraw> Content;
};

/* 원화 출금하기
 *
 * ## 원화 출금을 요청한다. 등록된 출금 계좌로 출금된다. 
*/
class SWAGGER_API SwaggerWithdrawApi::WithdrawKrwRequest : public Request
{
public:
    virtual ~WithdrawKrwRequest() {}
	void SetupHttpRequest(const TSharedRef<IHttpRequest>& HttpRequest) const final;
	FString ComputePath() const final;
    
	/* 출금 원화 수량  */
	FString Amount;
};

class SWAGGER_API SwaggerWithdrawApi::WithdrawKrwResponse : public Response
{
public:
    virtual ~WithdrawKrwResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonObject) final;
    
    SwaggerWithdraw Content;
};

}
