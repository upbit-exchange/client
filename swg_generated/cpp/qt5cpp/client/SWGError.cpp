/**
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGError.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {

SWGError::SWGError(QString json) {
    init();
    this->fromJson(json);
}

SWGError::SWGError() {
    init();
}

SWGError::~SWGError() {
    this->cleanup();
}

void
SWGError::init() {
    error = new SWGErrorInfo();
    m_error_isSet = false;
}

void
SWGError::cleanup() {
    if(error != nullptr) { 
        delete error;
    }
}

SWGError*
SWGError::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGError::fromJsonObject(QJsonObject pJson) {
    ::Swagger::setValue(&error, pJson["error"], "SWGErrorInfo", "SWGErrorInfo");
    
}

QString
SWGError::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
SWGError::asJsonObject() {
    QJsonObject obj;
    if((error != nullptr) && (error->isSet())){
        toJsonValue(QString("error"), error, obj, QString("SWGErrorInfo"));
    }

    return obj;
}

SWGErrorInfo*
SWGError::getError() {
    return error;
}
void
SWGError::setError(SWGErrorInfo* error) {
    this->error = error;
    this->m_error_isSet = true;
}


bool
SWGError::isSet(){
    bool isObjectUpdated = false;
    do{
        if(error != nullptr && error->isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

