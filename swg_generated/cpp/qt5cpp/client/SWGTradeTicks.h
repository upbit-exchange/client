/**
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SWGTradeTicks.h
 *
 * 
 */

#ifndef SWGTradeTicks_H_
#define SWGTradeTicks_H_

#include <QJsonObject>


#include "SWGNumber.h"
#include <QString>

#include "SWGObject.h"

namespace Swagger {

class SWGTradeTicks: public SWGObject {
public:
    SWGTradeTicks();
    SWGTradeTicks(QString json);
    ~SWGTradeTicks();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    SWGTradeTicks* fromJson(QString jsonString) override;

    QString* getMarket();
    void setMarket(QString* market);

    QString* getTradeDateUtc();
    void setTradeDateUtc(QString* trade_date_utc);

    QString* getTradeTimeUtc();
    void setTradeTimeUtc(QString* trade_time_utc);

    SWGNumber* getTimestamp();
    void setTimestamp(SWGNumber* timestamp);

    double getTradePrice();
    void setTradePrice(double trade_price);

    double getTradeVolume();
    void setTradeVolume(double trade_volume);

    double getPrevClosingPrice();
    void setPrevClosingPrice(double prev_closing_price);

    double getChangePrice();
    void setChangePrice(double change_price);

    QString* getAskBid();
    void setAskBid(QString* ask_bid);

    SWGNumber* getSequentialId();
    void setSequentialId(SWGNumber* sequential_id);


    virtual bool isSet() override;

private:
    QString* market;
    bool m_market_isSet;

    QString* trade_date_utc;
    bool m_trade_date_utc_isSet;

    QString* trade_time_utc;
    bool m_trade_time_utc_isSet;

    SWGNumber* timestamp;
    bool m_timestamp_isSet;

    double trade_price;
    bool m_trade_price_isSet;

    double trade_volume;
    bool m_trade_volume_isSet;

    double prev_closing_price;
    bool m_prev_closing_price_isSet;

    double change_price;
    bool m_change_price_isSet;

    QString* ask_bid;
    bool m_ask_bid_isSet;

    SWGNumber* sequential_id;
    bool m_sequential_id_isSet;

};

}

#endif /* SWGTradeTicks_H_ */
