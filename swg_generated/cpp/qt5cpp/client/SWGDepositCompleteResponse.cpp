/**
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGDepositCompleteResponse.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {

SWGDepositCompleteResponse::SWGDepositCompleteResponse(QString json) {
    init();
    this->fromJson(json);
}

SWGDepositCompleteResponse::SWGDepositCompleteResponse() {
    init();
}

SWGDepositCompleteResponse::~SWGDepositCompleteResponse() {
    this->cleanup();
}

void
SWGDepositCompleteResponse::init() {
    currency = new QString("");
    m_currency_isSet = false;
    deposit_address = new QString("");
    m_deposit_address_isSet = false;
    secondary_address = new QString("");
    m_secondary_address_isSet = false;
}

void
SWGDepositCompleteResponse::cleanup() {
    if(currency != nullptr) { 
        delete currency;
    }
    if(deposit_address != nullptr) { 
        delete deposit_address;
    }
    if(secondary_address != nullptr) { 
        delete secondary_address;
    }
}

SWGDepositCompleteResponse*
SWGDepositCompleteResponse::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGDepositCompleteResponse::fromJsonObject(QJsonObject pJson) {
    ::Swagger::setValue(&currency, pJson["currency"], "QString", "QString");
    
    ::Swagger::setValue(&deposit_address, pJson["deposit_address"], "QString", "QString");
    
    ::Swagger::setValue(&secondary_address, pJson["secondary_address"], "QString", "QString");
    
}

QString
SWGDepositCompleteResponse::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
SWGDepositCompleteResponse::asJsonObject() {
    QJsonObject obj;
    if(currency != nullptr && *currency != QString("")){
        toJsonValue(QString("currency"), currency, obj, QString("QString"));
    }
    if(deposit_address != nullptr && *deposit_address != QString("")){
        toJsonValue(QString("deposit_address"), deposit_address, obj, QString("QString"));
    }
    if(secondary_address != nullptr && *secondary_address != QString("")){
        toJsonValue(QString("secondary_address"), secondary_address, obj, QString("QString"));
    }

    return obj;
}

QString*
SWGDepositCompleteResponse::getCurrency() {
    return currency;
}
void
SWGDepositCompleteResponse::setCurrency(QString* currency) {
    this->currency = currency;
    this->m_currency_isSet = true;
}

QString*
SWGDepositCompleteResponse::getDepositAddress() {
    return deposit_address;
}
void
SWGDepositCompleteResponse::setDepositAddress(QString* deposit_address) {
    this->deposit_address = deposit_address;
    this->m_deposit_address_isSet = true;
}

QString*
SWGDepositCompleteResponse::getSecondaryAddress() {
    return secondary_address;
}
void
SWGDepositCompleteResponse::setSecondaryAddress(QString* secondary_address) {
    this->secondary_address = secondary_address;
    this->m_secondary_address_isSet = true;
}


bool
SWGDepositCompleteResponse::isSet(){
    bool isObjectUpdated = false;
    do{
        if(currency != nullptr && *currency != QString("")){ isObjectUpdated = true; break;}
        if(deposit_address != nullptr && *deposit_address != QString("")){ isObjectUpdated = true; break;}
        if(secondary_address != nullptr && *secondary_address != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

