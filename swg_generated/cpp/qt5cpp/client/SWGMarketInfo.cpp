/**
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGMarketInfo.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {

SWGMarketInfo::SWGMarketInfo(QString json) {
    init();
    this->fromJson(json);
}

SWGMarketInfo::SWGMarketInfo() {
    init();
}

SWGMarketInfo::~SWGMarketInfo() {
    this->cleanup();
}

void
SWGMarketInfo::init() {
    market = new QString("");
    m_market_isSet = false;
    korean_name = new QString("");
    m_korean_name_isSet = false;
    english_name = new QString("");
    m_english_name_isSet = false;
    market_warning = new QString("");
    m_market_warning_isSet = false;
}

void
SWGMarketInfo::cleanup() {
    if(market != nullptr) { 
        delete market;
    }
    if(korean_name != nullptr) { 
        delete korean_name;
    }
    if(english_name != nullptr) { 
        delete english_name;
    }
    if(market_warning != nullptr) { 
        delete market_warning;
    }
}

SWGMarketInfo*
SWGMarketInfo::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGMarketInfo::fromJsonObject(QJsonObject pJson) {
    ::Swagger::setValue(&market, pJson["market"], "QString", "QString");
    
    ::Swagger::setValue(&korean_name, pJson["korean_name"], "QString", "QString");
    
    ::Swagger::setValue(&english_name, pJson["english_name"], "QString", "QString");
    
    ::Swagger::setValue(&market_warning, pJson["market_warning"], "QString", "QString");
    
}

QString
SWGMarketInfo::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
SWGMarketInfo::asJsonObject() {
    QJsonObject obj;
    if(market != nullptr && *market != QString("")){
        toJsonValue(QString("market"), market, obj, QString("QString"));
    }
    if(korean_name != nullptr && *korean_name != QString("")){
        toJsonValue(QString("korean_name"), korean_name, obj, QString("QString"));
    }
    if(english_name != nullptr && *english_name != QString("")){
        toJsonValue(QString("english_name"), english_name, obj, QString("QString"));
    }
    if(market_warning != nullptr && *market_warning != QString("")){
        toJsonValue(QString("market_warning"), market_warning, obj, QString("QString"));
    }

    return obj;
}

QString*
SWGMarketInfo::getMarket() {
    return market;
}
void
SWGMarketInfo::setMarket(QString* market) {
    this->market = market;
    this->m_market_isSet = true;
}

QString*
SWGMarketInfo::getKoreanName() {
    return korean_name;
}
void
SWGMarketInfo::setKoreanName(QString* korean_name) {
    this->korean_name = korean_name;
    this->m_korean_name_isSet = true;
}

QString*
SWGMarketInfo::getEnglishName() {
    return english_name;
}
void
SWGMarketInfo::setEnglishName(QString* english_name) {
    this->english_name = english_name;
    this->m_english_name_isSet = true;
}

QString*
SWGMarketInfo::getMarketWarning() {
    return market_warning;
}
void
SWGMarketInfo::setMarketWarning(QString* market_warning) {
    this->market_warning = market_warning;
    this->m_market_warning_isSet = true;
}


bool
SWGMarketInfo::isSet(){
    bool isObjectUpdated = false;
    do{
        if(market != nullptr && *market != QString("")){ isObjectUpdated = true; break;}
        if(korean_name != nullptr && *korean_name != QString("")){ isObjectUpdated = true; break;}
        if(english_name != nullptr && *english_name != QString("")){ isObjectUpdated = true; break;}
        if(market_warning != nullptr && *market_warning != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

