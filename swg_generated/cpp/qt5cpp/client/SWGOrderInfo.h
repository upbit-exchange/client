/**
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SWGOrderInfo.h
 *
 * 
 */

#ifndef SWGOrderInfo_H_
#define SWGOrderInfo_H_

#include <QJsonObject>


#include "SWGNumber.h"
#include "SWGTrade.h"
#include <QList>
#include <QString>

#include "SWGObject.h"

namespace Swagger {

class SWGOrderInfo: public SWGObject {
public:
    SWGOrderInfo();
    SWGOrderInfo(QString json);
    ~SWGOrderInfo();
    void init();
    void cleanup();

    QString asJson () override;
    QJsonObject asJsonObject() override;
    void fromJsonObject(QJsonObject json) override;
    SWGOrderInfo* fromJson(QString jsonString) override;

    QString* getUuid();
    void setUuid(QString* uuid);

    QString* getSide();
    void setSide(QString* side);

    QString* getOrdType();
    void setOrdType(QString* ord_type);

    QString* getPrice();
    void setPrice(QString* price);

    QString* getState();
    void setState(QString* state);

    QString* getMarket();
    void setMarket(QString* market);

    QString* getCreatedAt();
    void setCreatedAt(QString* created_at);

    QString* getVolume();
    void setVolume(QString* volume);

    QString* getRemainingVolume();
    void setRemainingVolume(QString* remaining_volume);

    QString* getReservedFee();
    void setReservedFee(QString* reserved_fee);

    QString* getRemainingFee();
    void setRemainingFee(QString* remaining_fee);

    QString* getPaidFee();
    void setPaidFee(QString* paid_fee);

    QString* getLocked();
    void setLocked(QString* locked);

    QString* getExecutedVolume();
    void setExecutedVolume(QString* executed_volume);

    SWGNumber* getTradesCount();
    void setTradesCount(SWGNumber* trades_count);

    QList<SWGTrade*>* getTrades();
    void setTrades(QList<SWGTrade*>* trades);


    virtual bool isSet() override;

private:
    QString* uuid;
    bool m_uuid_isSet;

    QString* side;
    bool m_side_isSet;

    QString* ord_type;
    bool m_ord_type_isSet;

    QString* price;
    bool m_price_isSet;

    QString* state;
    bool m_state_isSet;

    QString* market;
    bool m_market_isSet;

    QString* created_at;
    bool m_created_at_isSet;

    QString* volume;
    bool m_volume_isSet;

    QString* remaining_volume;
    bool m_remaining_volume_isSet;

    QString* reserved_fee;
    bool m_reserved_fee_isSet;

    QString* remaining_fee;
    bool m_remaining_fee_isSet;

    QString* paid_fee;
    bool m_paid_fee_isSet;

    QString* locked;
    bool m_locked_isSet;

    QString* executed_volume;
    bool m_executed_volume_isSet;

    SWGNumber* trades_count;
    bool m_trades_count_isSet;

    QList<SWGTrade*>* trades;
    bool m_trades_isSet;

};

}

#endif /* SWGOrderInfo_H_ */
