/*
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * 출금 제약 정보
 */
@ApiModel(description = "출금 제약 정보")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-01-25T00:42:40.509Z")
public class WithdrawLimit {
  @SerializedName("currency")
  private String currency = null;

  @SerializedName("minimum")
  private String minimum = null;

  @SerializedName("onetime")
  private String onetime = null;

  @SerializedName("daily")
  private String daily = null;

  @SerializedName("remaining_daily")
  private String remainingDaily = null;

  @SerializedName("remaining_daily_krw")
  private String remainingDailyKrw = null;

  @SerializedName("fixed")
  private BigDecimal fixed = null;

  @SerializedName("can_withdraw")
  private Boolean canWithdraw = null;

  public WithdrawLimit currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * 화폐를 의미하는 영문 대문자 코드
   * @return currency
  **/
  @ApiModelProperty(example = "BTC", value = "화폐를 의미하는 영문 대문자 코드")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public WithdrawLimit minimum(String minimum) {
    this.minimum = minimum;
    return this;
  }

   /**
   * 출금 최소 금액/수량
   * @return minimum
  **/
  @ApiModelProperty(value = "출금 최소 금액/수량")
  public String getMinimum() {
    return minimum;
  }

  public void setMinimum(String minimum) {
    this.minimum = minimum;
  }

  public WithdrawLimit onetime(String onetime) {
    this.onetime = onetime;
    return this;
  }

   /**
   * 1회 출금 한도
   * @return onetime
  **/
  @ApiModelProperty(value = "1회 출금 한도")
  public String getOnetime() {
    return onetime;
  }

  public void setOnetime(String onetime) {
    this.onetime = onetime;
  }

  public WithdrawLimit daily(String daily) {
    this.daily = daily;
    return this;
  }

   /**
   * 1일 출금 한도
   * @return daily
  **/
  @ApiModelProperty(example = "10.0", value = "1일 출금 한도")
  public String getDaily() {
    return daily;
  }

  public void setDaily(String daily) {
    this.daily = daily;
  }

  public WithdrawLimit remainingDaily(String remainingDaily) {
    this.remainingDaily = remainingDaily;
    return this;
  }

   /**
   * 1일 잔여 출금 한도
   * @return remainingDaily
  **/
  @ApiModelProperty(example = "10.0", value = "1일 잔여 출금 한도")
  public String getRemainingDaily() {
    return remainingDaily;
  }

  public void setRemainingDaily(String remainingDaily) {
    this.remainingDaily = remainingDaily;
  }

  public WithdrawLimit remainingDailyKrw(String remainingDailyKrw) {
    this.remainingDailyKrw = remainingDailyKrw;
    return this;
  }

   /**
   * 통합 1일 잔여 출금 한도
   * @return remainingDailyKrw
  **/
  @ApiModelProperty(example = "0.0", value = "통합 1일 잔여 출금 한도")
  public String getRemainingDailyKrw() {
    return remainingDailyKrw;
  }

  public void setRemainingDailyKrw(String remainingDailyKrw) {
    this.remainingDailyKrw = remainingDailyKrw;
  }

  public WithdrawLimit fixed(BigDecimal fixed) {
    this.fixed = fixed;
    return this;
  }

   /**
   * 출금 금액/수량 소수점 자리 수
   * @return fixed
  **/
  @ApiModelProperty(value = "출금 금액/수량 소수점 자리 수")
  public BigDecimal getFixed() {
    return fixed;
  }

  public void setFixed(BigDecimal fixed) {
    this.fixed = fixed;
  }

  public WithdrawLimit canWithdraw(Boolean canWithdraw) {
    this.canWithdraw = canWithdraw;
    return this;
  }

   /**
   * 출금 지원 여부
   * @return canWithdraw
  **/
  @ApiModelProperty(example = "true", value = "출금 지원 여부")
  public Boolean isCanWithdraw() {
    return canWithdraw;
  }

  public void setCanWithdraw(Boolean canWithdraw) {
    this.canWithdraw = canWithdraw;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WithdrawLimit withdrawLimit = (WithdrawLimit) o;
    return Objects.equals(this.currency, withdrawLimit.currency) &&
        Objects.equals(this.minimum, withdrawLimit.minimum) &&
        Objects.equals(this.onetime, withdrawLimit.onetime) &&
        Objects.equals(this.daily, withdrawLimit.daily) &&
        Objects.equals(this.remainingDaily, withdrawLimit.remainingDaily) &&
        Objects.equals(this.remainingDailyKrw, withdrawLimit.remainingDailyKrw) &&
        Objects.equals(this.fixed, withdrawLimit.fixed) &&
        Objects.equals(this.canWithdraw, withdrawLimit.canWithdraw);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, minimum, onetime, daily, remainingDaily, remainingDailyKrw, fixed, canWithdraw);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WithdrawLimit {\n");
    
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    minimum: ").append(toIndentedString(minimum)).append("\n");
    sb.append("    onetime: ").append(toIndentedString(onetime)).append("\n");
    sb.append("    daily: ").append(toIndentedString(daily)).append("\n");
    sb.append("    remainingDaily: ").append(toIndentedString(remainingDaily)).append("\n");
    sb.append("    remainingDailyKrw: ").append(toIndentedString(remainingDailyKrw)).append("\n");
    sb.append("    fixed: ").append(toIndentedString(fixed)).append("\n");
    sb.append("    canWithdraw: ").append(toIndentedString(canWithdraw)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

