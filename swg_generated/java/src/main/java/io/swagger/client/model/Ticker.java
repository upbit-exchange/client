/*
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * Ticker
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-01-25T00:42:40.509Z")
public class Ticker {
  @SerializedName("market")
  private String market = null;

  @SerializedName("trade_date")
  private String tradeDate = null;

  @SerializedName("trade_time")
  private String tradeTime = null;

  @SerializedName("trade_date_kst")
  private String tradeDateKst = null;

  @SerializedName("trade_time_kst")
  private String tradeTimeKst = null;

  @SerializedName("opening_price")
  private Double openingPrice = null;

  @SerializedName("high_price")
  private Double highPrice = null;

  @SerializedName("low_price")
  private Double lowPrice = null;

  @SerializedName("trade_price")
  private Double tradePrice = null;

  @SerializedName("prev_closing_price")
  private Double prevClosingPrice = null;

  @SerializedName("change")
  private String change = null;

  @SerializedName("change_price")
  private Double changePrice = null;

  @SerializedName("change_rate")
  private Double changeRate = null;

  @SerializedName("signed_change_price")
  private Double signedChangePrice = null;

  @SerializedName("signed_change_rate")
  private Double signedChangeRate = null;

  @SerializedName("trade_volume")
  private Double tradeVolume = null;

  @SerializedName("acc_trade_price")
  private Double accTradePrice = null;

  @SerializedName("acc_trade_price_24h")
  private Double accTradePrice24h = null;

  @SerializedName("acc_trade_volume")
  private Double accTradeVolume = null;

  @SerializedName("acc_trade_volume_24h")
  private Double accTradeVolume24h = null;

  @SerializedName("highest_52_week_price")
  private Double highest52WeekPrice = null;

  @SerializedName("highest_52_week_date")
  private String highest52WeekDate = null;

  @SerializedName("lowest_52_week_price")
  private Double lowest52WeekPrice = null;

  @SerializedName("lowest_52_week_date")
  private String lowest52WeekDate = null;

  @SerializedName("timestamp")
  private BigDecimal timestamp = null;

  public Ticker market(String market) {
    this.market = market;
    return this;
  }

   /**
   * 종목 구분 코드
   * @return market
  **/
  @ApiModelProperty(example = "KRW-BTC", value = "종목 구분 코드")
  public String getMarket() {
    return market;
  }

  public void setMarket(String market) {
    this.market = market;
  }

  public Ticker tradeDate(String tradeDate) {
    this.tradeDate = tradeDate;
    return this;
  }

   /**
   * 최근 거래 일자(UTC)
   * @return tradeDate
  **/
  @ApiModelProperty(example = "20210105", value = "최근 거래 일자(UTC)")
  public String getTradeDate() {
    return tradeDate;
  }

  public void setTradeDate(String tradeDate) {
    this.tradeDate = tradeDate;
  }

  public Ticker tradeTime(String tradeTime) {
    this.tradeTime = tradeTime;
    return this;
  }

   /**
   * 최근 거래 시각(UTC)
   * @return tradeTime
  **/
  @ApiModelProperty(example = "135702", value = "최근 거래 시각(UTC)")
  public String getTradeTime() {
    return tradeTime;
  }

  public void setTradeTime(String tradeTime) {
    this.tradeTime = tradeTime;
  }

  public Ticker tradeDateKst(String tradeDateKst) {
    this.tradeDateKst = tradeDateKst;
    return this;
  }

   /**
   * 최근 거래 일자(KST)
   * @return tradeDateKst
  **/
  @ApiModelProperty(example = "20210105", value = "최근 거래 일자(KST)")
  public String getTradeDateKst() {
    return tradeDateKst;
  }

  public void setTradeDateKst(String tradeDateKst) {
    this.tradeDateKst = tradeDateKst;
  }

  public Ticker tradeTimeKst(String tradeTimeKst) {
    this.tradeTimeKst = tradeTimeKst;
    return this;
  }

   /**
   * 최근 거래 시각(KST)
   * @return tradeTimeKst
  **/
  @ApiModelProperty(example = "225702", value = "최근 거래 시각(KST)")
  public String getTradeTimeKst() {
    return tradeTimeKst;
  }

  public void setTradeTimeKst(String tradeTimeKst) {
    this.tradeTimeKst = tradeTimeKst;
  }

  public Ticker openingPrice(Double openingPrice) {
    this.openingPrice = openingPrice;
    return this;
  }

   /**
   * 시가
   * @return openingPrice
  **/
  @ApiModelProperty(example = "3.6478E7", value = "시가")
  public Double getOpeningPrice() {
    return openingPrice;
  }

  public void setOpeningPrice(Double openingPrice) {
    this.openingPrice = openingPrice;
  }

  public Ticker highPrice(Double highPrice) {
    this.highPrice = highPrice;
    return this;
  }

   /**
   * 고가
   * @return highPrice
  **/
  @ApiModelProperty(example = "3.7379E7", value = "고가")
  public Double getHighPrice() {
    return highPrice;
  }

  public void setHighPrice(Double highPrice) {
    this.highPrice = highPrice;
  }

  public Ticker lowPrice(Double lowPrice) {
    this.lowPrice = lowPrice;
    return this;
  }

   /**
   * 저가
   * @return lowPrice
  **/
  @ApiModelProperty(example = "3.4357E7", value = "저가")
  public Double getLowPrice() {
    return lowPrice;
  }

  public void setLowPrice(Double lowPrice) {
    this.lowPrice = lowPrice;
  }

  public Ticker tradePrice(Double tradePrice) {
    this.tradePrice = tradePrice;
    return this;
  }

   /**
   * 종가
   * @return tradePrice
  **/
  @ApiModelProperty(example = "3.6025E7", value = "종가")
  public Double getTradePrice() {
    return tradePrice;
  }

  public void setTradePrice(Double tradePrice) {
    this.tradePrice = tradePrice;
  }

  public Ticker prevClosingPrice(Double prevClosingPrice) {
    this.prevClosingPrice = prevClosingPrice;
    return this;
  }

   /**
   * 전일 종가
   * @return prevClosingPrice
  **/
  @ApiModelProperty(example = "3.6462E7", value = "전일 종가")
  public Double getPrevClosingPrice() {
    return prevClosingPrice;
  }

  public void setPrevClosingPrice(Double prevClosingPrice) {
    this.prevClosingPrice = prevClosingPrice;
  }

  public Ticker change(String change) {
    this.change = change;
    return this;
  }

   /**
   * EVEN : 보합 RISE : 상승 FALL : 하락 
   * @return change
  **/
  @ApiModelProperty(example = "FALL", value = "EVEN : 보합 RISE : 상승 FALL : 하락 ")
  public String getChange() {
    return change;
  }

  public void setChange(String change) {
    this.change = change;
  }

  public Ticker changePrice(Double changePrice) {
    this.changePrice = changePrice;
    return this;
  }

   /**
   * 변화액의 절대값
   * @return changePrice
  **/
  @ApiModelProperty(example = "437000.0", value = "변화액의 절대값")
  public Double getChangePrice() {
    return changePrice;
  }

  public void setChangePrice(Double changePrice) {
    this.changePrice = changePrice;
  }

  public Ticker changeRate(Double changeRate) {
    this.changeRate = changeRate;
    return this;
  }

   /**
   * 변화율의 절대값
   * @return changeRate
  **/
  @ApiModelProperty(example = "0.0119850804", value = "변화율의 절대값")
  public Double getChangeRate() {
    return changeRate;
  }

  public void setChangeRate(Double changeRate) {
    this.changeRate = changeRate;
  }

  public Ticker signedChangePrice(Double signedChangePrice) {
    this.signedChangePrice = signedChangePrice;
    return this;
  }

   /**
   * 부호가 있는 변화액
   * @return signedChangePrice
  **/
  @ApiModelProperty(example = "-437000.0", value = "부호가 있는 변화액")
  public Double getSignedChangePrice() {
    return signedChangePrice;
  }

  public void setSignedChangePrice(Double signedChangePrice) {
    this.signedChangePrice = signedChangePrice;
  }

  public Ticker signedChangeRate(Double signedChangeRate) {
    this.signedChangeRate = signedChangeRate;
    return this;
  }

   /**
   * 부호가 있는 변화율
   * @return signedChangeRate
  **/
  @ApiModelProperty(example = "-0.0119850804", value = "부호가 있는 변화율")
  public Double getSignedChangeRate() {
    return signedChangeRate;
  }

  public void setSignedChangeRate(Double signedChangeRate) {
    this.signedChangeRate = signedChangeRate;
  }

  public Ticker tradeVolume(Double tradeVolume) {
    this.tradeVolume = tradeVolume;
    return this;
  }

   /**
   * 가장 최근 거래량
   * @return tradeVolume
  **/
  @ApiModelProperty(example = "5.0E-4", value = "가장 최근 거래량")
  public Double getTradeVolume() {
    return tradeVolume;
  }

  public void setTradeVolume(Double tradeVolume) {
    this.tradeVolume = tradeVolume;
  }

  public Ticker accTradePrice(Double accTradePrice) {
    this.accTradePrice = accTradePrice;
    return this;
  }

   /**
   * 누적 거래대금 (UTC 0시 기준)
   * @return accTradePrice
  **/
  @ApiModelProperty(example = "2.904156012415452E11", value = "누적 거래대금 (UTC 0시 기준)")
  public Double getAccTradePrice() {
    return accTradePrice;
  }

  public void setAccTradePrice(Double accTradePrice) {
    this.accTradePrice = accTradePrice;
  }

  public Ticker accTradePrice24h(Double accTradePrice24h) {
    this.accTradePrice24h = accTradePrice24h;
    return this;
  }

   /**
   * 24시간 누적 거래대금
   * @return accTradePrice24h
  **/
  @ApiModelProperty(example = "4.277435855069105E11", value = "24시간 누적 거래대금")
  public Double getAccTradePrice24h() {
    return accTradePrice24h;
  }

  public void setAccTradePrice24h(Double accTradePrice24h) {
    this.accTradePrice24h = accTradePrice24h;
  }

  public Ticker accTradeVolume(Double accTradeVolume) {
    this.accTradeVolume = accTradeVolume;
    return this;
  }

   /**
   * 누적 거래량 (UTC 0시 기준)
   * @return accTradeVolume
  **/
  @ApiModelProperty(example = "8075.76782922", value = "누적 거래량 (UTC 0시 기준)")
  public Double getAccTradeVolume() {
    return accTradeVolume;
  }

  public void setAccTradeVolume(Double accTradeVolume) {
    this.accTradeVolume = accTradeVolume;
  }

  public Ticker accTradeVolume24h(Double accTradeVolume24h) {
    this.accTradeVolume24h = accTradeVolume24h;
    return this;
  }

   /**
   * 24시간 누적 거래량
   * @return accTradeVolume24h
  **/
  @ApiModelProperty(example = "11899.89832832", value = "24시간 누적 거래량")
  public Double getAccTradeVolume24h() {
    return accTradeVolume24h;
  }

  public void setAccTradeVolume24h(Double accTradeVolume24h) {
    this.accTradeVolume24h = accTradeVolume24h;
  }

  public Ticker highest52WeekPrice(Double highest52WeekPrice) {
    this.highest52WeekPrice = highest52WeekPrice;
    return this;
  }

   /**
   * 52주 신고가
   * @return highest52WeekPrice
  **/
  @ApiModelProperty(example = "3.9453E7", value = "52주 신고가")
  public Double getHighest52WeekPrice() {
    return highest52WeekPrice;
  }

  public void setHighest52WeekPrice(Double highest52WeekPrice) {
    this.highest52WeekPrice = highest52WeekPrice;
  }

  public Ticker highest52WeekDate(String highest52WeekDate) {
    this.highest52WeekDate = highest52WeekDate;
    return this;
  }

   /**
   * 52주 신고가 달성일
   * @return highest52WeekDate
  **/
  @ApiModelProperty(example = "2021-01-03T00:00:00.000+0000", value = "52주 신고가 달성일")
  public String getHighest52WeekDate() {
    return highest52WeekDate;
  }

  public void setHighest52WeekDate(String highest52WeekDate) {
    this.highest52WeekDate = highest52WeekDate;
  }

  public Ticker lowest52WeekPrice(Double lowest52WeekPrice) {
    this.lowest52WeekPrice = lowest52WeekPrice;
    return this;
  }

   /**
   * 52주 신저가
   * @return lowest52WeekPrice
  **/
  @ApiModelProperty(example = "5489000.0", value = "52주 신저가")
  public Double getLowest52WeekPrice() {
    return lowest52WeekPrice;
  }

  public void setLowest52WeekPrice(Double lowest52WeekPrice) {
    this.lowest52WeekPrice = lowest52WeekPrice;
  }

  public Ticker lowest52WeekDate(String lowest52WeekDate) {
    this.lowest52WeekDate = lowest52WeekDate;
    return this;
  }

   /**
   * 52주 신저가 달성일
   * @return lowest52WeekDate
  **/
  @ApiModelProperty(example = "2020-03-13T00:00:00.000+0000", value = "52주 신저가 달성일")
  public String getLowest52WeekDate() {
    return lowest52WeekDate;
  }

  public void setLowest52WeekDate(String lowest52WeekDate) {
    this.lowest52WeekDate = lowest52WeekDate;
  }

  public Ticker timestamp(BigDecimal timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * 타임스탬프
   * @return timestamp
  **/
  @ApiModelProperty(example = "1.609855022921E12", value = "타임스탬프")
  public BigDecimal getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(BigDecimal timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ticker ticker = (Ticker) o;
    return Objects.equals(this.market, ticker.market) &&
        Objects.equals(this.tradeDate, ticker.tradeDate) &&
        Objects.equals(this.tradeTime, ticker.tradeTime) &&
        Objects.equals(this.tradeDateKst, ticker.tradeDateKst) &&
        Objects.equals(this.tradeTimeKst, ticker.tradeTimeKst) &&
        Objects.equals(this.openingPrice, ticker.openingPrice) &&
        Objects.equals(this.highPrice, ticker.highPrice) &&
        Objects.equals(this.lowPrice, ticker.lowPrice) &&
        Objects.equals(this.tradePrice, ticker.tradePrice) &&
        Objects.equals(this.prevClosingPrice, ticker.prevClosingPrice) &&
        Objects.equals(this.change, ticker.change) &&
        Objects.equals(this.changePrice, ticker.changePrice) &&
        Objects.equals(this.changeRate, ticker.changeRate) &&
        Objects.equals(this.signedChangePrice, ticker.signedChangePrice) &&
        Objects.equals(this.signedChangeRate, ticker.signedChangeRate) &&
        Objects.equals(this.tradeVolume, ticker.tradeVolume) &&
        Objects.equals(this.accTradePrice, ticker.accTradePrice) &&
        Objects.equals(this.accTradePrice24h, ticker.accTradePrice24h) &&
        Objects.equals(this.accTradeVolume, ticker.accTradeVolume) &&
        Objects.equals(this.accTradeVolume24h, ticker.accTradeVolume24h) &&
        Objects.equals(this.highest52WeekPrice, ticker.highest52WeekPrice) &&
        Objects.equals(this.highest52WeekDate, ticker.highest52WeekDate) &&
        Objects.equals(this.lowest52WeekPrice, ticker.lowest52WeekPrice) &&
        Objects.equals(this.lowest52WeekDate, ticker.lowest52WeekDate) &&
        Objects.equals(this.timestamp, ticker.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(market, tradeDate, tradeTime, tradeDateKst, tradeTimeKst, openingPrice, highPrice, lowPrice, tradePrice, prevClosingPrice, change, changePrice, changeRate, signedChangePrice, signedChangeRate, tradeVolume, accTradePrice, accTradePrice24h, accTradeVolume, accTradeVolume24h, highest52WeekPrice, highest52WeekDate, lowest52WeekPrice, lowest52WeekDate, timestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ticker {\n");
    
    sb.append("    market: ").append(toIndentedString(market)).append("\n");
    sb.append("    tradeDate: ").append(toIndentedString(tradeDate)).append("\n");
    sb.append("    tradeTime: ").append(toIndentedString(tradeTime)).append("\n");
    sb.append("    tradeDateKst: ").append(toIndentedString(tradeDateKst)).append("\n");
    sb.append("    tradeTimeKst: ").append(toIndentedString(tradeTimeKst)).append("\n");
    sb.append("    openingPrice: ").append(toIndentedString(openingPrice)).append("\n");
    sb.append("    highPrice: ").append(toIndentedString(highPrice)).append("\n");
    sb.append("    lowPrice: ").append(toIndentedString(lowPrice)).append("\n");
    sb.append("    tradePrice: ").append(toIndentedString(tradePrice)).append("\n");
    sb.append("    prevClosingPrice: ").append(toIndentedString(prevClosingPrice)).append("\n");
    sb.append("    change: ").append(toIndentedString(change)).append("\n");
    sb.append("    changePrice: ").append(toIndentedString(changePrice)).append("\n");
    sb.append("    changeRate: ").append(toIndentedString(changeRate)).append("\n");
    sb.append("    signedChangePrice: ").append(toIndentedString(signedChangePrice)).append("\n");
    sb.append("    signedChangeRate: ").append(toIndentedString(signedChangeRate)).append("\n");
    sb.append("    tradeVolume: ").append(toIndentedString(tradeVolume)).append("\n");
    sb.append("    accTradePrice: ").append(toIndentedString(accTradePrice)).append("\n");
    sb.append("    accTradePrice24h: ").append(toIndentedString(accTradePrice24h)).append("\n");
    sb.append("    accTradeVolume: ").append(toIndentedString(accTradeVolume)).append("\n");
    sb.append("    accTradeVolume24h: ").append(toIndentedString(accTradeVolume24h)).append("\n");
    sb.append("    highest52WeekPrice: ").append(toIndentedString(highest52WeekPrice)).append("\n");
    sb.append("    highest52WeekDate: ").append(toIndentedString(highest52WeekDate)).append("\n");
    sb.append("    lowest52WeekPrice: ").append(toIndentedString(lowest52WeekPrice)).append("\n");
    sb.append("    lowest52WeekDate: ").append(toIndentedString(lowest52WeekDate)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

