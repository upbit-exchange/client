/* 
 * Upbit Open API
 *
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Error {
  #[serde(rename = "error")]
  error: Option<::models::ErrorInfo>
}

impl Error {
  pub fn new() -> Error {
    Error {
      error: None
    }
  }

  pub fn set_error(&mut self, error: ::models::ErrorInfo) {
    self.error = Some(error);
  }

  pub fn with_error(mut self, error: ::models::ErrorInfo) -> Error {
    self.error = Some(error);
    self
  }

  pub fn error(&self) -> Option<&::models::ErrorInfo> {
    self.error.as_ref()
  }

  pub fn reset_error(&mut self) {
    self.error = None;
  }

}



