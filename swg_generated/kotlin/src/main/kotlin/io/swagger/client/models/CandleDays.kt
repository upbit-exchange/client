/**
* Upbit Open API
* ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
*
* OpenAPI spec version: 1.0.0
* Contact: ujhin942@gmail.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package io.swagger.client.models


/**
 * 
 * @param market 마켓명
 * @param candle_date_time_utc 캔들 기준 시각 (UTC 기준)
 * @param candle_date_time_kst 캔들 기준 시각 (KST 기준)
 * @param opening_price 시가
 * @param high_price 고가
 * @param low_price 저가
 * @param trade_price 종가
 * @param timestamp 해당 캔들에서 마지막 틱이 저장된 시각
 * @param candle_acc_trade_price 누적 거래 금액
 * @param candle_acc_trade_volume 누적 거래량
 * @param prev_closing_price 전일 종가 (UTC 0시 기준)
 * @param change_price 전일 종가 대비 변화 금액
 * @param change_rate 전일 종가 대비 변화량
 * @param converted_trade_price 종가 환산 화폐 단위로 환산된 가격 (요청에 convertingPriceUnit 파라미터 없을 시 해당 필드 포함되지 않음.) 
 */
data class CandleDays (
    /* 마켓명 */
    val market: kotlin.String? = null,
    /* 캔들 기준 시각 (UTC 기준) */
    val candle_date_time_utc: kotlin.String? = null,
    /* 캔들 기준 시각 (KST 기준) */
    val candle_date_time_kst: kotlin.String? = null,
    /* 시가 */
    val opening_price: kotlin.Double? = null,
    /* 고가 */
    val high_price: kotlin.Double? = null,
    /* 저가 */
    val low_price: kotlin.Double? = null,
    /* 종가 */
    val trade_price: kotlin.Double? = null,
    /* 해당 캔들에서 마지막 틱이 저장된 시각 */
    val timestamp: java.math.BigDecimal? = null,
    /* 누적 거래 금액 */
    val candle_acc_trade_price: kotlin.Double? = null,
    /* 누적 거래량 */
    val candle_acc_trade_volume: kotlin.Double? = null,
    /* 전일 종가 (UTC 0시 기준) */
    val prev_closing_price: kotlin.Double? = null,
    /* 전일 종가 대비 변화 금액 */
    val change_price: kotlin.Double? = null,
    /* 전일 종가 대비 변화량 */
    val change_rate: kotlin.Double? = null,
    /* 종가 환산 화폐 단위로 환산된 가격 (요청에 convertingPriceUnit 파라미터 없을 시 해당 필드 포함되지 않음.)  */
    val converted_trade_price: kotlin.Double? = null
) {

}

