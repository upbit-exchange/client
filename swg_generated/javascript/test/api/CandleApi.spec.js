/*
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.18
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UpbitOpenApi);
  }
}(this, function(expect, UpbitOpenApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UpbitOpenApi.CandleApi();
  });

  describe('(package)', function() {
    describe('CandleApi', function() {
      describe('candleDays', function() {
        it('should call candleDays successfully', function(done) {
          // TODO: uncomment, update parameter values for candleDays call and complete the assertions
          /*
          var market = "market_example";
          var opts = {};
          opts.to = "to_example";
          opts.count = 8.14;
          opts.convertingPriceUnit = "KRW";

          instance.candleDays(market, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Object);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('candleMinutes', function() {
        it('should call candleMinutes successfully', function(done) {
          // TODO: uncomment, update parameter values for candleMinutes call and complete the assertions
          /*
          var unit = 56;
          var market = "market_example";
          var opts = {};
          opts.to = "to_example";
          opts.count = 8.14;

          instance.candleMinutes(unit, market, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Object);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('candleMonth', function() {
        it('should call candleMonth successfully', function(done) {
          // TODO: uncomment, update parameter values for candleMonth call and complete the assertions
          /*
          var market = "market_example";
          var opts = {};
          opts.to = "to_example";
          opts.count = 8.14;

          instance.candleMonth(market, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Object);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('candleWeeks', function() {
        it('should call candleWeeks successfully', function(done) {
          // TODO: uncomment, update parameter values for candleWeeks call and complete the assertions
          /*
          var market = "market_example";
          var opts = {};
          opts.to = "to_example";
          opts.count = 8.14;

          instance.candleWeeks(market, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Object);
            // expect(data).to.be(null);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
