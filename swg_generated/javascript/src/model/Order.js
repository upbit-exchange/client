/*
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.18
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.UpbitOpenApi) {
      root.UpbitOpenApi = {};
    }
    root.UpbitOpenApi.Order = factory(root.UpbitOpenApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The Order model module.
   * @module model/Order
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Order</code>.
   * @alias module:model/Order
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Order</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Order} obj Optional instance to populate.
   * @return {module:model/Order} The populated <code>Order</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('uuid'))
        obj.uuid = ApiClient.convertToType(data['uuid'], 'String');
      if (data.hasOwnProperty('side'))
        obj.side = ApiClient.convertToType(data['side'], 'String');
      if (data.hasOwnProperty('ord_type'))
        obj.ordType = ApiClient.convertToType(data['ord_type'], 'String');
      if (data.hasOwnProperty('price'))
        obj.price = ApiClient.convertToType(data['price'], 'String');
      if (data.hasOwnProperty('state'))
        obj.state = ApiClient.convertToType(data['state'], 'String');
      if (data.hasOwnProperty('market'))
        obj.market = ApiClient.convertToType(data['market'], 'String');
      if (data.hasOwnProperty('created_at'))
        obj.createdAt = ApiClient.convertToType(data['created_at'], 'String');
      if (data.hasOwnProperty('volume'))
        obj.volume = ApiClient.convertToType(data['volume'], 'String');
      if (data.hasOwnProperty('remaining_volume'))
        obj.remainingVolume = ApiClient.convertToType(data['remaining_volume'], 'String');
      if (data.hasOwnProperty('reserved_fee'))
        obj.reservedFee = ApiClient.convertToType(data['reserved_fee'], 'String');
      if (data.hasOwnProperty('remaining_fee'))
        obj.remainingFee = ApiClient.convertToType(data['remaining_fee'], 'String');
      if (data.hasOwnProperty('paid_fee'))
        obj.paidFee = ApiClient.convertToType(data['paid_fee'], 'String');
      if (data.hasOwnProperty('locked'))
        obj.locked = ApiClient.convertToType(data['locked'], 'String');
      if (data.hasOwnProperty('executed_volume'))
        obj.executedVolume = ApiClient.convertToType(data['executed_volume'], 'String');
      if (data.hasOwnProperty('trades_count'))
        obj.tradesCount = ApiClient.convertToType(data['trades_count'], 'Number');
    }
    return obj;
  }

  /**
   * 주문의 고유 아이디
   * @member {String} uuid
   */
  exports.prototype.uuid = undefined;

  /**
   * 주문 종류
   * @member {String} side
   */
  exports.prototype.side = undefined;

  /**
   * 주문 방식
   * @member {String} ordType
   */
  exports.prototype.ordType = undefined;

  /**
   * 주문 당시 화폐 가격
   * @member {String} price
   */
  exports.prototype.price = undefined;

  /**
   * 주문 상태
   * @member {String} state
   */
  exports.prototype.state = undefined;

  /**
   * 마켓의 유일키
   * @member {String} market
   */
  exports.prototype.market = undefined;

  /**
   * 주문 생성 시간
   * @member {String} createdAt
   */
  exports.prototype.createdAt = undefined;

  /**
   * 사용자가 입력한 주문 양
   * @member {String} volume
   */
  exports.prototype.volume = undefined;

  /**
   * 체결 후 남은 주문 양
   * @member {String} remainingVolume
   */
  exports.prototype.remainingVolume = undefined;

  /**
   * 수수료로 예약된 비용
   * @member {String} reservedFee
   */
  exports.prototype.reservedFee = undefined;

  /**
   * 남은 수수료
   * @member {String} remainingFee
   */
  exports.prototype.remainingFee = undefined;

  /**
   * 사용된 수수료
   * @member {String} paidFee
   */
  exports.prototype.paidFee = undefined;

  /**
   * 거래에 사용중인 비용
   * @member {String} locked
   */
  exports.prototype.locked = undefined;

  /**
   * 체결된 양
   * @member {String} executedVolume
   */
  exports.prototype.executedVolume = undefined;

  /**
   * 해당 주문에 걸린 체결 수
   * @member {Number} tradesCount
   */
  exports.prototype.tradesCount = undefined;


  return exports;

}));
