/*
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.18
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.UpbitOpenApi) {
      root.UpbitOpenApi = {};
    }
    root.UpbitOpenApi.CandleDate = factory(root.UpbitOpenApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The CandleDate model module.
   * @module model/CandleDate
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>CandleDate</code>.
   * @alias module:model/CandleDate
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>CandleDate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CandleDate} obj Optional instance to populate.
   * @return {module:model/CandleDate} The populated <code>CandleDate</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('market'))
        obj.market = ApiClient.convertToType(data['market'], 'String');
      if (data.hasOwnProperty('candle_date_time_utc'))
        obj.candleDateTimeUtc = ApiClient.convertToType(data['candle_date_time_utc'], 'String');
      if (data.hasOwnProperty('candle_date_time_kst'))
        obj.candleDateTimeKst = ApiClient.convertToType(data['candle_date_time_kst'], 'String');
      if (data.hasOwnProperty('opening_price'))
        obj.openingPrice = ApiClient.convertToType(data['opening_price'], 'Number');
      if (data.hasOwnProperty('high_price'))
        obj.highPrice = ApiClient.convertToType(data['high_price'], 'Number');
      if (data.hasOwnProperty('low_price'))
        obj.lowPrice = ApiClient.convertToType(data['low_price'], 'Number');
      if (data.hasOwnProperty('trade_price'))
        obj.tradePrice = ApiClient.convertToType(data['trade_price'], 'Number');
      if (data.hasOwnProperty('timestamp'))
        obj.timestamp = ApiClient.convertToType(data['timestamp'], 'Number');
      if (data.hasOwnProperty('candle_acc_trade_price'))
        obj.candleAccTradePrice = ApiClient.convertToType(data['candle_acc_trade_price'], 'Number');
      if (data.hasOwnProperty('candle_acc_trade_volume'))
        obj.candleAccTradeVolume = ApiClient.convertToType(data['candle_acc_trade_volume'], 'Number');
      if (data.hasOwnProperty('first_day_of_period'))
        obj.firstDayOfPeriod = ApiClient.convertToType(data['first_day_of_period'], 'String');
    }
    return obj;
  }

  /**
   * 마켓명
   * @member {String} market
   */
  exports.prototype.market = undefined;

  /**
   * 캔들 기준 시각 (UTC 기준)
   * @member {String} candleDateTimeUtc
   */
  exports.prototype.candleDateTimeUtc = undefined;

  /**
   * 캔들 기준 시각 (KST 기준)
   * @member {String} candleDateTimeKst
   */
  exports.prototype.candleDateTimeKst = undefined;

  /**
   * 시가
   * @member {Number} openingPrice
   */
  exports.prototype.openingPrice = undefined;

  /**
   * 고가
   * @member {Number} highPrice
   */
  exports.prototype.highPrice = undefined;

  /**
   * 저가
   * @member {Number} lowPrice
   */
  exports.prototype.lowPrice = undefined;

  /**
   * 종가
   * @member {Number} tradePrice
   */
  exports.prototype.tradePrice = undefined;

  /**
   * 해당 캔들에서 마지막 틱이 저장된 시각
   * @member {Number} timestamp
   */
  exports.prototype.timestamp = undefined;

  /**
   * 누적 거래 금액
   * @member {Number} candleAccTradePrice
   */
  exports.prototype.candleAccTradePrice = undefined;

  /**
   * 누적 거래량
   * @member {Number} candleAccTradeVolume
   */
  exports.prototype.candleAccTradeVolume = undefined;

  /**
   * 캔들 기간의 가장 첫 날
   * @member {String} firstDayOfPeriod
   */
  exports.prototype.firstDayOfPeriod = undefined;


  return exports;

}));
