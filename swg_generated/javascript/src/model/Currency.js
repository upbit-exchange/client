/*
 * Upbit Open API
 * ## REST API for Upbit Exchange - Base URL: [https://api.upbit.com] - Official Upbit API Documents: [https://docs.upbit.com] - Official Support email: [open-api@upbit.com] 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ujhin942@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.18
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.UpbitOpenApi) {
      root.UpbitOpenApi = {};
    }
    root.UpbitOpenApi.Currency = factory(root.UpbitOpenApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The Currency model module.
   * @module model/Currency
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Currency</code>.
   * 화폐 정보
   * @alias module:model/Currency
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Currency</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Currency} obj Optional instance to populate.
   * @return {module:model/Currency} The populated <code>Currency</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('code'))
        obj.code = ApiClient.convertToType(data['code'], 'String');
      if (data.hasOwnProperty('withdraw_fee'))
        obj.withdrawFee = ApiClient.convertToType(data['withdraw_fee'], 'String');
      if (data.hasOwnProperty('is_coin'))
        obj.isCoin = ApiClient.convertToType(data['is_coin'], 'Boolean');
      if (data.hasOwnProperty('wallet_state'))
        obj.walletState = ApiClient.convertToType(data['wallet_state'], 'String');
      if (data.hasOwnProperty('wallet_support'))
        obj.walletSupport = ApiClient.convertToType(data['wallet_support'], ['String']);
    }
    return obj;
  }

  /**
   * 화폐를 의미하는 영문 대문자 코드
   * @member {String} code
   */
  exports.prototype.code = undefined;

  /**
   * 해당 화폐의 출금 수수료
   * @member {String} withdrawFee
   */
  exports.prototype.withdrawFee = undefined;

  /**
   * 화폐의 코인 여부
   * @member {Boolean} isCoin
   */
  exports.prototype.isCoin = undefined;

  /**
   * 해당 화폐의 지갑 상태
   * @member {String} walletState
   */
  exports.prototype.walletState = undefined;

  /**
   * 해당 화폐가 지원하는 입출금 정보
   * @member {Array.<String>} walletSupport
   */
  exports.prototype.walletSupport = undefined;


  return exports;

}));
